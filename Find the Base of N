Program :


The program must accept a string N as the input. The program must print the output based on the
following conditions.
- If N is a valid binary representation then print "Binary" as the output.
- Else if N is a valid octal representation then print "Octal" as the output.
- Else if N is a valid decimal representation then print "Decimal" as the output.
- Else if N is a valid hexadecimal representation then print "Hexadecimal" as the output.
- Else the program must print "Invalid" as the output.
Note: The alphabets in N are only in upper case.
Boundary Condition(s):
1 <= Length of N <= 100
Input Format:
The first line contains the string N.
Output Format:
The first line contains the string value based on the conditions mentioned above.
Example Input/Output 1:
Input:
110
Output
Binary
Explanation:
110 is the valid binary, octal, decimal and hexadecimal representations. But in the mentioned
order, Binary comes first.
Hence the output is Binary
Example Input/Output 2:
Input:
62067
Output:
Octal
Explanation:
62067 is the valid octal, decimal and hexadecimal representations. But in the mentioned
order, Octal comes first.
Hence the output is Octal
Example Input/Output 3:
Input:
10G
Output:
Invalid






Code :

import java.util.*;
public class Hello {

    public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String number=sc.next();
		if(binary(number)) {
		    System.out.println("Binary");
		}
		else if(octal(number)) {
		    System.out.println("Octal");
		}
		else if(decimal(number)) {
		    System.out.println("Decimal");
		}
		else if(hexadecimal(number)) {
		    System.out.println("Hexadecimal");
		}
		else
		{
		    System.out.println("Invalid");
		}
	}
	
	private static boolean binary(String number) {
	    for(int i=0;i<number.length();i++) {
	        char c=number.charAt(i);
	        if(c < '0' || c > '1') {
	            return false;
	        }
	    }
	    return true;
	}
	
	private static boolean octal(String number) {
	    for(int i=0;i<number.length();i++) {
	        char c=number.charAt(i);
	        if(c < '0' || c > '7') {
	            return false;
	        }
	    }
	    return true;
	}
	
	private static boolean decimal(String number) {
	    for(int i=0;i<number.length();i++) {
	        char c=number.charAt(i);
	        if(c < '0' || c > '9') {
	            return false;
	        }
	    }
	    return true;
	}
	
	private static boolean hexadecimal(String number) {
	    for(int i=0;i<number.length();i++) {
	        char c=number.charAt(i);
	        if(c < '0' || c > '9') {
	            if(c < 'A' || c > 'F') {
	                return false;
	            }
	        }
	    }
	    return true;
	}
}
